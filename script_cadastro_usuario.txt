import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';

//#region Função de cadastro de usuário
Future<String> cadastrarUsuario(String nome, String email, String senha) async {
  try {
    UserCredential userCredential = await FirebaseAuth.instance
        .createUserWithEmailAndPassword(email: email, password: senha);

    String userId = userCredential.user!.uid;

    await FirebaseFirestore.instance.collection('users').doc(userId).set({
      'nome': nome,
      'email': email,
    });

    print("Usuário $nome cadastrado com sucesso!");
    return userId;
  } catch (e) {
    print("Erro ao cadastrar usuário: $e");
    return '';
  }
}
//#endregion

//#region Função dinâmica para adicionar cômodo com estados
Future<void> adicionarComodoComEstadoDinamico(String userId, String nomeComodo, List<String> dispositivos) async {
  try {
    DocumentReference comodoRef = await FirebaseFirestore.instance
        .collection('users')
        .doc(userId)
        .collection('comodos')
        .add({
      'nome': nomeComodo,
      'dispositivos': dispositivos,
    });

    String comodoId = comodoRef.id;

    Map<String, dynamic> estados = {};

    for (String dispositivo in dispositivos) {
      String nome = dispositivo.toLowerCase();

      if (nome.contains('lâmpada')) {
        estados['lampada_ligada'] = false;
      } else if (nome.contains('ar')) {
        estados['ar_condicionado_ligado'] = false;
        estados['ar_condicionado_temperatura'] = 23;
      } else if (nome.contains('fechadura')) {
        estados['fechadura_aberta'] = false;
      } else if (nome.contains('janela')) {
        estados['janela_aberta'] = false;
      } else if (nome.contains('ventilador')) {
        estados['ventilador_ligado'] = false;
        estados['ventilador_velocidade'] = 1;
      }
    }

    await comodoRef.collection('estados_dispositivos').doc(comodoId).set(estados);

    print("Cômodo $nomeComodo com estados criado para o usuário $userId.");
  } catch (e) {
    print("Erro ao adicionar cômodo com estados: $e");
  }
}
//#endregion

//#region Função principal para executar o script completo
Future<void> rodarCadastroCompleto() async {
  // Exemplo 1: dois cômodos com dispositivos fictícios
  String userId1 = await cadastrarUsuario('Usuário 1', 'usuario1@example.com', 'senha123');
  if (userId1.isNotEmpty) {
    await adicionarComodoComEstadoDinamico(userId1, 'Sala', ['Lâmpada Inteligente', 'TV']);
    await adicionarComodoComEstadoDinamico(userId1, 'Cozinha', ['Geladeira Moderna', 'Microondas']);
  }

  // Exemplo 2: outro usuário com cômodos diferentes
  String userId2 = await cadastrarUsuario('Maria Controle', 'maria.ctrl@example.com', 'senha456');
  if (userId2.isNotEmpty) {
    await adicionarComodoComEstadoDinamico(userId2, 'Sala de Estar', ['Janela Inteligente', 'Fechadura', 'Ventilador Turbo']);
  }
}
//#endregion


---------------------------------------------------------------------------------------------------------------------------------------

PAG PARA RODAR ISSO

import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'setup_script.dart'; // arquivo acima

class SetupPage extends StatefulWidget {
  const SetupPage({Key? key}) : super(key: key);

  @override
  State<SetupPage> createState() => _SetupPageState();
}

class _SetupPageState extends State<SetupPage> {
  @override
  void initState() {
    super.initState();
    _executarScript();
  }

  Future<void> _executarScript() async {
    await Firebase.initializeApp();
    await rodarCadastroCompleto();
    print('✔️ Script de configuração executado com sucesso!');
  }

  @override
  Widget build(BuildContext context) {
    return const Scaffold(
      backgroundColor: Colors.black,
      body: Center(
        child: Text(
          'Executando setup inicial...',
          style: TextStyle(color: Colors.white, fontSize: 18),
        ),
      ),
    );
  }
}


---------------------------------------------------------------------------------------------------------------------------------------


✅ Como usar
Adicione o setup_script.dart e setup_page.dart no seu projeto Flutter.

Chame SetupPage() na inicialização (por exemplo, no main.dart) temporariamente.

Rode o app — ele vai cadastrar os usuários, cômodos e estados automaticamente.

Depois, remova a SetupPage do app e o banco já estará pronto!